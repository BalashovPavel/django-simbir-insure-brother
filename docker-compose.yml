version: "3.9"

services:

  rabbit:
    image: "rabbitmq:3.8-management-alpine"
    restart: on-failure
    container_name: rabbit
    hostname: rabbit
    env_file:
      - ./.env.dev
    ports:
      - "5672:5672"
      - "15672:15672"
  worker:
    build:
      context: "."
    restart: on-failure
    command: celery -A insure_brother worker -l info
    links:
      - rabbit
    depends_on:
      - rabbit

  flower:
    build: ./
    command: celery -A insure_brother flower
    ports:
      - "5555:5555"
    depends_on:
      - worker
      - rabbit

  db:
    image: postgres
    ports:
      - "5432"
    volumes:
      - ./data/db:/var/lib/postgresql/data
    env_file:
      - ./.env.dev
    environment:
#      SQL_NAME: postgres
#      SQL_USER: postgres
      POSTGRES_PASSWORD: postgres

  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./insure/:/usr/insure/
    ports:
      - "8000:8000"
    env_file:
      - ./.env.dev
    depends_on:
      - db

  elasticsearch:
    image: "elasticsearch:7.14.0"
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"

  mongo:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: username_brother
      MONGO_INITDB_ROOT_PASSWORD: password_brother

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: username_brother
      ME_CONFIG_MONGODB_ADMINPASSWORD: password_brother
      ME_CONFIG_MONGODB_URL: mongodb://username_brother:password_brother@mongo:27017/


volumes:
  db:
